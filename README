Project Skeleton for the lgs app.

GOAL: This is simple example to handle http request and send message to a queue.
dispatch config: src/lsq_config.erl
listening port: src/lsq.app.src
RabbitMQ Server: src/lsq.app.src

Note:
1. Only handle GET method on http request
2. Get to parameters. (paramName1: level, paramName2: msg)
3. INFO, WARN, ERROR are only valid value for level parameter.

At client side --> http://localhost:8090/logservice?level=info&msg=This_is_info_log_message
At server side --> send msg value in level queue.(3 queues[info,warn,error], created it if there are not exist)


You should find in this directory:

README : this file
Makefile : simple make commands
rebar : the Rebar build tool for Erlang applications
rebar.config : configuration for Rebar
start.sh : simple startup script for running csd

/src
/lsq.app : the Erlang app specification(listining ip,port web config and rabbitMQ server config)
/lsq_app.erl : base module for the Erlang application
/lsq_sup.erl : OTP supervisor for the application
/lsq_service.erl : core service code (get parameter, send to server)

You probably want to do one of a couple of things at this point:

0. Build the skeleton application:
$ make
- or -
$ ./rebar compile

1. Start up the skeleton application:
$ ./start.sh